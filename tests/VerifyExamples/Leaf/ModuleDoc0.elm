module VerifyExamples.Leaf.ModuleDoc0 exposing (..)

-- This file got generated by [elm-verify-examples](https://github.com/stoeffel/elm-verify-examples).
-- Please don't modify this file by hand!

import Test
import Expect

import Leaf exposing (..)
import Leaf.Core as Core
import Dict exposing (Dict)
import Leaf exposing (Value(..))
import Leaf exposing (Value(..))



context : Dict String Field
context =
    [ StringVal "World" |> Leaf.field "name"
    , (\s2 s1 -> StringVal (s1 ++ s2))
        |> Leaf.binaryFun (Leaf.typed Leaf.asString)
            (Leaf.typed Leaf.asString)
        |> Leaf.field "append"
    ]
        |> Dict.fromList
        |> Leaf.addExposed Core.package



spec0 : Test.Test
spec0 =
    Test.test "Module VerifyExamples: \n\n    \"\\\"Hello \\\" .append name\"\n        |> Leaf.run context\n    --> Ok (StringVal \"Hello World\",context)" <|
        \() ->
            Expect.equal
                (
                "\"Hello \" .append name"
                    |> Leaf.run context
                )
                (
                Ok (StringVal "Hello World",context)
                )